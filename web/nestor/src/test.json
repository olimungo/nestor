{
    "macros": {
        "createReactFolderAndFiles": [
            {
                "javascript": [
                    "const newReactFolder = await window.showInputBox()", // get the component's name

                    // create a object to store various edits, including file creation, deletion and edits
                    "const we = new vscode.WorkspaceEdit();",

                    // get the workspace folder path + file:/// uri scheme
                    "const thisWorkspace = vscode.workspace.workspaceFolders[0].uri.toString();", // file:///c:/Users/Mark/OneDrive/Test Bed
                    // append the new folder name
                    "const uriBase = `${thisWorkspace}/${newReactFolder}`;", // file:///c:/Users/Mark/OneDrive/Test Bed/Test

                    // "await window.showInformationMessage(` ${uriBase}`)",  // just handy to check on progress

                    // create uri's for the three files to be created
                    "let newUri1 = vscode.Uri.parse(`${uriBase}/index.js`);",
                    "let newUri2 = vscode.Uri.parse(`${uriBase}/${newReactFolder}.js`);",
                    "let newUri3 = vscode.Uri.parse(`${uriBase}/${newReactFolder}.styled.js`);",

                    "let newFiles = [ newUri1, newUri2, newUri3];",

                    "for (const newFile of newFiles) { let document = await we.createFile(newFile, { ignoreIfExists: false, overwrite: true });};",

                    "let styledContent = `first line flush left", // how to use template literals in this macro
                    "second line will be flush left",
                    "   third line indented`;",

                    //  insert text into the top of each file
                    "await we.insert(newUri1, new vscode.Position(0, 0), `export { default } from './${newReactFolder}'`);",
                    "await we.insert(newUri2, new vscode.Position(0, 0), `my ${newReactFolder}.js content`);",
                    "await we.insert(newUri3, new vscode.Position(0, 0), styledContent);",

                    "await vscode.workspace.applyEdit(we);", // apply all the edits: file creation and adding text

                    "for (const newFile of newFiles) { let document = await vscode.workspace.openTextDocument(newFile); await document.save(); };"
                ]
            }
        ]
    }
}
